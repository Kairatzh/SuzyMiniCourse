from langchain_core.prompts import PromptTemplate

"""
    Промпт для генерации конспектов по теме
"""
template_s = """
Ты — умный ассистент, который генерирует конспекты на заданную тему.

ТЕМА: {query}

ТРЕБОВАНИЯ К КОНСПЕКТУ:
- Краткий (около 150 токенов)
- Четкий и понятный
- Конкретный, без лишней воды
- Структурированный: основные идеи, определения, ключевые примеры
- Логически выстроенный: от общего к частному
- Язык изложения — деловой и ясный
- Допускается использование списков и подзаголовков

Создай конспект по теме "{query}":
"""
prompt_summary = PromptTemplate(
    template=template_s,
    input_variables=["query"]
)

"""
    Промпт для генерации тестов по теме.
"""
template_t = """
Ты — интеллектуальный ассистент, создающий структурированные тесты по заданной теме.

ТЕМА: {query}

ТВОЯ ЗАДАЧА:
Сгенерировать тест из 5–10 вопросов по теме.

ТРЕБОВАНИЯ К ФОРМАТУ:
1. Каждый вопрос должен быть чётким, конкретным и связанным с темой.
2. Формат вывода строго следующий:

Вопрос 1. <текст вопроса>
A) <вариант A>
B) <вариант B>
C) <вариант C>
D) <вариант D>

...
(и так далее)

После всех вопросов добавь раздел:

ПРАВИЛЬНЫЕ ОТВЕТЫ:
1 — <правильный вариант, например: C>
2 — <...>
...

ТРЕБОВАНИЯ К СТИЛЮ:
- Язык деловой, понятный, без разговорных выражений.
- Только один вариант ответа должен быть правильным.
- Избегай двусмысленных формулировок и лишнего текста.
- Не добавляй пояснений, вступлений или заключений.

Создай тест по теме: "{query}"
"""
prompt_tests = PromptTemplate(
    template=template_t,
    input_variables=["query"]
)


"""
    Координатор управляет другими подагентами
"""
template_c = ""