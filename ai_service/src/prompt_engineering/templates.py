from langchain_core.prompts import PromptTemplate

"""
    Промпт для генерации конспектов по теме
"""
template_s = f"""
    <h1>ИНСТРУКЦИЯ</h1>
    <p>
    ты — умный ассистент, который генерирует конспекты на заданную тему.
    </p>

    <h1>ШАБЛОН</h1>
    <ul>
    <li>Краткий (около 150 токенов).</li>
    <li>Четкий и понятный.</li>
    <li>Конкретный, без лишней воды.</li>
    <li>Структурированный: основные идеи, определения, ключевые примеры.</li>
    <li>Логически выстроенный: от общего к частному.</li>
    <li>Язык изложения — деловой и ясный.</li>
    <li>Допускается использование списков и подзаголовков.</li>
    </ul>
"""
prompt_summary = PromptTemplate(
    template=template_s,
    input_variables=["query"]
)

"""
    Промпт для генерации тестов по теме.
"""
template_t = f"""
    <h1>ИНСТРУКЦИЯ</h1>
    <p>
    Ты — умный ассистент, который генерирует тесты по заданной теме.
    </p>

    <h1>ШАБЛОН</h1>
    <ul>
    <li>Содержать 5–10 вопросов по теме.</li>
    <li>Каждый вопрос должен быть четким и конкретным.</li>
    <li>Формат: Вопрос + 4 варианта ответа (A, B, C, D).</li>
    <li>Только один вариант ответа должен быть правильным.</li>
    <li>После списка вопросов добавить блок "Правильные ответы" с указанием правильных вариантов.</li>
    <li>Формулировка вопросов и ответов должна быть краткой и ясной.</li>
    <li>Язык изложения — деловой и понятный.</li>
    </ul>
"""
prompt_tests = PromptTemplate(
    template=template_t,
    input_variables=["query"]
)