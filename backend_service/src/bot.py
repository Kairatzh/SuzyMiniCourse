import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from ai_service.src.agents.agent_gen import generate_c
import os
from dotenv import load_dotenv

load_dotenv()

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø Fill AI.\n"
        "–û—Ç–ø—Ä–∞–≤—å —Ç–µ–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: *Machine Learning basics*), –∏ —è —Å–æ–∑–¥–∞–º –º–∏–Ω–∏-–∫—É—Ä—Å.",
        parse_mode="Markdown"
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.message.text
    await update.message.reply_text(f"‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫—É—Ä—Å –ø–æ —Ç–µ–º–µ: *{query}*...", parse_mode="Markdown")

    try:
        result = generate_c(query)

        summary_text = f"üìò *–ö–æ–Ω—Å–ø–µ–∫—Ç:*\n{result.summary}"
        tests_text = f"üß© *–¢–µ—Å—Ç—ã:*\n{result.tests}"
        videos_text = f"üé• *–í–∏–¥–µ–æ:*\n{result.videos}"

        await update.message.reply_text(summary_text, parse_mode="Markdown")
        await update.message.reply_text(tests_text, parse_mode="Markdown")
        await update.message.reply_text(videos_text, parse_mode="Markdown")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫—É—Ä—Å–∞: {e}")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫—É—Ä—Å–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    app.run_polling()

if __name__ == "__main__":
    main()
